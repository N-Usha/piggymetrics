
resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'UshaRegistry'
  imageRepository: 'nushapiggymetrics'
  containerRegistry: 'usharegistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'usharegistryf8c8-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:

    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: docker-compose.yml
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
        action: 'Build Services'

    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: docker-compose.yml
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
        action: 'Push Services'
        
    - upload: docker-compose.yml

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'NUshapiggymetrics.piggymetrics'
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            inputs:
              action: 'bake'
              renderType: 'kompose'
              dockerComposeFile: $(Pipeline.Workspace)/docker-compose.yml
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: $(bake.manifestsBundle) 
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
