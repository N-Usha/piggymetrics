# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8c746889-cb5a-41a5-8037-b2c04cc49ca4'
  imageRepository: 'nushapiggymetrics'
  containerRegistry: 'usharegistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'usharegistryf8c8-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'NUshapiggymetrics.piggymetrics'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Container Registry'
              dockerComposeFile: 'docker-compose.yml'
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              action: 'Build Services'

          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Container Registry'
              dockerComposeFile: 'docker-compose.yml'
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              action: 'Push Services'
              
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            inputs:
              action: 'bake'
              renderType: 'kompose'
              dockerComposeFile: docker-compose.yml
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: $(bake.manifestsBundle) 
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
